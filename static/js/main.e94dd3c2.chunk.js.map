{"version":3,"sources":["Components/PageDiv.js","Themes/Colors.js","Themes/Metrics.js","Components/Button.js","Components/Text.js","Components/Stack.js","Containers/Rules.js","Containers/Leaderboard.js","Components/Label.js","Components/Input.js","Components/Dropdown.js","Containers/GameSettings.js","Containers/Guesses.js","Components/TextDisplay.js","Containers/ResultPage.js","Containers/Gameboard.js","App.js","serviceWorker.js","index.js"],"names":["PageDiv","styled","div","colors","primary","primaryAccent","secondary","secondaryAccent","black","light","white","metrics","buttonWidth","radiusSmall","fontSize","smaller","small","medium","large","Button","button","Colors","Metrics","Text","props","margin","align","css","size","color","Stack","vertical","justify","Rules","Leaderboard","LabelStyle","label","Label","text","InputField","input","Input","placeholder","onChange","e","onChangeHandler","id","value","Select","select","Dropdown","list","map","item","i","key","Settings","GameSettings","state","username","level","this","setState","target","style","bind","onClick","onCreateNewGame","Component","GuessesTable","table","GuessesRow","tr","GuessesHeader","th","GuessesData","td","Guesses","guesses","guess","feedback","nums","numPlaces","TextDisplay","horizontal","Result","ResultPage","result","score","guessesLeft","secretCode","children","exitGame","Gameboard","currentGuess","notification","showHint","guessString","validateGuess","length","status","max","isValid","guessObject","secretCodeObject","correctNums","correctNumPlaces","isNaN","digit","Number","hasOwnProperty","indices","count","index","Math","min","newGuesses","slice","newGuess","push","newScore","oldScore","onExitGame","buyHint","onSubmitGuess","App","showrules","showleaderboard","currentModal","live","modal","gameSettings","url","axios","get","then","response","data","split","join","code","catch","error","console","log","metaData","createNewGame","showModal","height","visible","onClose","hideModal","showconfirmexit","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e94dd3c2.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst PageDiv = styled.div`\n  margin: 10px auto;\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default PageDiv","const colors = {\n  primary: '#0288D1',\n  primaryAccent: '#f8f8ff',\n  secondary: '#303030',\n  secondaryAccent: '#a9a9a9',\n  black: '#000000',\n  light: '#E8E8E8',\n  white: '#FFFFFF'\n}\n\nexport default colors","const metrics = {\n  buttonWidth: 140,\n  radiusSmall: 5,\n  fontSize: {\n    smaller: 10,\n    small: 14,\n    medium: 18,\n    large: 30\n  }\n}\n\nexport default metrics","import styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\n\nconst Button = styled.button`\n  background-color: ${Colors.primary};\n  color: ${Colors.primaryAccent};\n  border-radius: ${Metrics.radiusSmall}px;\n  font-size: ${Metrics.fontSize.medium}px;\n  width: ${Metrics.buttonWidth}px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n  &:hover {\n    font-size: calc(${Metrics.fontSize.medium}px + 2px)\n  } \n\n`\n\nexport default Button","import styled, { css } from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\n\nconst Text = styled.div`\n  margin: ${props => props.margin ? props.margin : '0px'};\n  ${props => props.align && css`\n    text-align: ${props.align}\n  `};\n  ${props => props.size && css`\n    font-size: ${Metrics.fontSize[props.size]}px\n  `};\n  ${props => props.color && css`\n    color: ${Colors[props.color]}\n  `};\n`\n\nexport default Text","import styled, { css } from 'styled-components'\n\n// default stack is horizontal\nconst Stack = styled.div`\n  display: flex;\n  ${props => props.vertical && css`\n    flex-direction: column\n  `};\n  ${props => props.justify && css`\n    justify-content: ${props.justify}\n  `};\n  ${props => props.align && css`\n    align-items: ${props.align}\n  `}\n`\n\nexport default Stack","import React from 'react'\nimport Stack from '../Components/Stack'\nimport Text from '../Components/Text'\n\nconst Rules = props => (\n  <Stack vertical>\n    <Text size='small' color='secondary'>Game Rules</Text>\n    <Stack align='flex-start'>\n      <ul>\n        <li><Text size='smaller'>You get 10 chances to crack the 4 digit code</Text></li>\n        <li><Text size='smaller'>After each guess, you will get two feedback values:</Text></li>\n        <li><Text size='smaller'> 1) Numbers and Places - # of correct digits in the right place </Text></li>\n        <li><Text size='smaller'> 2) Numbers - # of correct digits in the wrong place </Text></li>\n      </ul>\n    </Stack>\n\n    <Text size='small' color='secondary'>Scoring</Text>\n    <Stack align='flex-start'>\n      <ul>\n        <li><Text size='smaller'>You start with 100 points</Text></li>\n        <li><Text size='smaller'>10 points deducted for each round of incorrect guesses</Text></li>\n        <li><Text size='smaller'>Hints cost 10 points for first digit revealed</Text></li>\n        <li><Text size='smaller'>You lose if you have 0 points or use up all your guesses - whichever comes first</Text></li>\n      </ul>\n    </Stack>\n    <Text size='smaller' color='secondary'>*Increase level to increase viable number range</Text>\n    <Text size='smaller' color='secondary'>Normal: 0 - 7 / Nightmare: 0 - 8 / Hell: 0 - 9</Text>\n  </Stack>\n)\n\nexport default Rules","import React from 'react'\n\nconst Leaderboard = props => (\n  <div>Leaderboard Page</div>\n)\n\nexport default Leaderboard","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors } from '../Themes/index'\n\nconst LabelStyle = styled.label`\n  color: ${Colors.black};\n  display: inline-block;\n  width: 100px;\n`\n\nconst Label = props => {\n  return (\n    <LabelStyle>\n      {props.text}\n    </LabelStyle>\n  )\n}\n\nexport default Label","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport Label from './Label'\n\nconst InputField = styled.input`\n  border-color: ${Colors.secondaryAccent};\n  background-color: ${Colors.light};\n  color: ${Colors.secondary};\n  border-radius: calc(${Metrics.radiusSmall}px - 2px);\n  font-size: ${Metrics.fontSize.smaller}px;\n  width: ${Metrics.buttonWidth}px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`\n\nconst Input = props => {\n  return (\n    <div>\n      <Label text={props.text}/>\n      <InputField\n        placeholder={props.placeholder}\n        onChange={(e) => props.onChangeHandler(props.id, e)}\n        value={props.value}\n      />\n    </div>\n  )\n}\n\nexport default Input","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport Label from './Label'\n\nconst Select = styled.select`\n  border-color: ${Colors.secondaryAccent};\n  background-color: ${Colors.light};\n  color: ${Colors.secondary};\n  border-radius: calc(${Metrics.radiusSmall}px - 2px);\n  font-size: ${Metrics.fontSize.smaller}px;\n  width: ${Metrics.buttonWidth + 14}px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n\n`\n\nconst Dropdown = props => {\n  return (\n    <div>\n      <Label text={props.text} />\n      <Select onChange={(e) => props.onChangeHandler(props.id, e)}>\n        {props.list.map((item, i) => {\n          return (\n            <option key={i}>{item}</option>\n          )\n        })}\n      </Select>\n    </div>\n  )\n}\n\nexport default Dropdown","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Stack from '../Components/Stack'\nimport Input from '../Components/Input'\nimport Text from '../Components/Text'\nimport Button from '../Components/Button'\nimport Dropdown from '../Components/Dropdown'\n\nconst Settings = styled.div`\n  margin: 15px;\n  padding: 15px;\n  border: 1px ${Colors.light} solid;\n  border-radius: ${Metrics.radiusSmall}px;\n`\n\nclass GameSettings extends Component {\n  state = {\n    username: 'guest',\n    level: 'normal'\n  }\n\n  onChangeHandler(id, e) {\n    this.setState({\n      [id]: e.target.value\n    })\n  }\n\n  render () {\n    const levels = ['normal', 'nightmare', 'hell']\n    return (\n      <Settings>\n        <Stack vertical align='center'>\n          <Stack align='center'>\n            <SettingsIcon color='action' />\n            <Text size='medium' color='secondary'>Game Settings</Text>\n            <SettingsIcon color='action' />\n          </Stack>\n          <div style={{margin: '10px 20px'}}>\n            <Input\n              text='username'\n              id='username'\n              placeholder='leave blank for guest'\n              onChangeHandler={this.onChangeHandler.bind(this)}\n            />\n            <Dropdown\n              text='level'\n              id='level'\n              onChangeHandler={this.onChangeHandler.bind(this)}\n              list={levels}\n            />\n          </div>\n          <Button\n            onClick={() => this.props.onCreateNewGame(this.state)}\n          >\n            New Game\n          </Button>\n        </Stack>\n      </Settings>\n    )\n  }\n}\n\nexport default GameSettings","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\n\nconst GuessesTable = styled.table`\n  border-collapse: collapse;\n  border-radius: ${Metrics.radiusSmall}px;\n  overflow: hidden;\n`\nconst GuessesRow = styled.tr`\n\n`\n\nconst GuessesHeader = styled.th`\n  padding: 1em;\n  background: ${Colors.light};\n  border-bottom: 2px solid ${Colors.white};\n`\nconst GuessesData = styled.td`\n  padding: 1em;\n  background: ${Colors.light};\n  border-bottom: 2px solid ${Colors.white};\n  text-align: center\n`\n\nconst Guesses = props => {\n  return (\n    <GuessesTable>\n      <GuessesRow>\n        <GuessesHeader>Your Guess</GuessesHeader>\n        <GuessesHeader>Correct Numbers</GuessesHeader>\n        <GuessesHeader>Correct Numbers AND Places</GuessesHeader>\n      </GuessesRow>\n      {props.guesses.map((guess, i) => {\n        return (\n          <GuessesRow key={i}>\n            <GuessesData>{guess.guess}</GuessesData>\n            <GuessesData>{guess.feedback.nums}</GuessesData>\n            <GuessesData>{guess.feedback.numPlaces}</GuessesData>\n          </GuessesRow>\n        )\n      })}\n    </GuessesTable>\n  )\n}\n\nexport default Guesses","import React from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport Label from './Label'\nimport Stack from './Stack'\n\nconst Text = styled.div`\n  border-color: ${Colors.secondaryAccent};\n  background-color: ${Colors.light};\n  color: ${Colors.secondary};\n  border-radius: calc(${Metrics.radiusSmall}px - 2px);\n  font-size: ${Metrics.fontSize.small}px;\n  width: ${Metrics.buttonWidth}px;\n  margin: 5px;\n  padding: 5px;\n`\n\nconst TextDisplay = props => {\n  return (\n    <Stack horizontal align='center'>\n      <Label text={props.text} />\n      <Text>\n        {props.value}\n      </Text>\n    </Stack>\n  )\n}\n\nexport default TextDisplay","import React from 'react'\nimport styled from 'styled-components'\nimport Text from '../Components/Text'\nimport TextDisplay from '../Components/TextDisplay'\nimport Stack from '../Components/Stack'\nimport Button from '../Components/Button'\n\nconst Result = styled.div`\n`\n\nconst ResultPage = props => {\n  return (\n    <Result>\n      <Stack vertical align='center'>\n        <Text size='medium'>\n          {props.result}\n        </Text>\n        <TextDisplay text='Your Score' value={props.score} />\n        <TextDisplay text='Username' value={props.username} />\n        <TextDisplay text='Guesses Used' value={`${(10 - props.guessesLeft)} / 10`} />\n        <TextDisplay text='Secret Code' value={props.secretCode} />\n        {props.children}\n        <Button onClick={() => props.exitGame()}>Play Again</Button>\n      </Stack>\n    </Result>\n  )\n}\n\nexport default ResultPage","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Colors, Metrics } from '../Themes/index'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Stack from '../Components/Stack'\nimport Input from '../Components/Input'\nimport Text from '../Components/Text'\nimport Button from '../Components/Button'\nimport Guesses from './Guesses'\nimport ResultPage from './ResultPage'\nimport TextDisplay from '../Components/TextDisplay'\n\nconst Settings = styled.div`\n  margin: 15px;\n  padding: 15px;\n  border: 1px ${Colors.light} solid;\n  border-radius: ${Metrics.radiusSmall}px;\n`\n\nclass Gameboard extends Component {\n  state = {\n    guesses: [],\n    currentGuess: '',\n    notification: '',\n    secretCode: this.props.secretCode,\n    guessesLeft: 10,\n    score: 100,\n    showHint: false\n  }\n\n  onSubmitGuess() {\n    let guessString = this.state.currentGuess\n    if (this.validateGuess(guessString)) {\n      this.setState({\n        notification: ''\n      }, () => {\n        let guessesLeft = 10 - this.state.guesses.length\n        if (guessesLeft === 0) {\n          this.setState({\n            guessesLeft: 10 - this.state.guesses.length,\n            status: 'lose'\n          })\n        } else {\n          this.setState({\n            guessesLeft: 10 - this.state.guesses.length,\n            currentGuess: ''\n          })\n        }\n      } )\n    } else {\n      this.setState({\n        notification: `guess must be a four digit number between 0 and ${this.props.max}`\n      })\n    }\n  }\n\n  validateGuess(guess) {\n    let isValid = true\n    let guessObject = {}\n    let secretCodeObject = {}\n    let correctNums = 0\n    let correctNumPlaces = 0\n    let { secretCode } = this.state\n    if (guess.length !== 4 || isNaN(guess)) {\n      return false\n    }\n    for (let i = 0; i < guess.length; i ++ ) {\n      let digit = guess[i]\n      if (Number(digit) > this.props.max) {\n        isValid = false\n      } else {\n        if (!guessObject.hasOwnProperty(digit)) {\n          guessObject[digit] = {}\n          guessObject[digit].indices = {[i]:i}\n          guessObject[digit].count = 1\n        } else {\n          guessObject[digit].indices[i] = i\n          guessObject[digit].count++\n        }\n      }\n    }\n    if (isValid) {\n      for (let i = 0; i < secretCode.length; i ++) {\n        let digit = secretCode[i]\n        if (!secretCodeObject.hasOwnProperty(digit)){\n          secretCodeObject[digit] = {}\n          secretCodeObject[digit].indices = {[i]:i}\n          secretCodeObject[digit].count = 1\n        } else {\n          secretCodeObject[digit].indices[i] = i\n          secretCodeObject[digit].count++\n        }\n      }\n      for (let digit in secretCodeObject) {\n        if (guessObject.hasOwnProperty(digit)) {\n          correctNums+= Math.min(secretCodeObject[digit].count,guessObject[digit].count)\n          for (let index in secretCodeObject[digit].indices){\n            if (guessObject[digit].indices.hasOwnProperty(index)) {\n              correctNumPlaces++\n              correctNums--\n            }\n            if (correctNumPlaces === 4) {\n              this.setState({\n                status: 'win'\n              })\n            }\n          }\n        }\n      }\n      let newGuesses = this.state.guesses.slice(0)\n      let newGuess = {\n        guess: guess,\n        feedback: {\n          nums: correctNums,\n          numPlaces: correctNumPlaces\n        }\n      }\n      newGuesses.push(newGuess)\n      let newScore = this.state.score - 10\n      this.setState({\n        guesses: newGuesses,\n        score: newScore\n      })\n      if (newScore === 0) {\n        this.setState({\n          status: 'lose',\n          score: 0\n        })\n      }\n    }\n    return isValid\n  }\n\n  onChangeHandler(id, e) {\n    this.setState({\n      [id]: e.target.value\n    })\n  }\n\n  buyHint() {\n    let oldScore = this.state.score - 10\n    this.setState({\n      showHint: true,\n      score: oldScore\n    })\n  }\n\n  render ()  {\n    switch(this.state.status) {\n      case 'win':\n        return (\n          <ResultPage\n            result='You Win!'\n            exitGame={this.props.onExitGame}\n            secretCode={this.state.secretCode}\n            guessesLeft={this.state.guessesLeft}\n            username={this.props.username}\n            score={this.state.score}\n          >\n            <Guesses guesses={this.state.guesses} />\n          </ResultPage>\n        )\n      case 'lose':\n        return (\n          <ResultPage\n            result='You Lose!'\n            exitGame={this.props.onExitGame}\n            secretCode={this.state.secretCode}\n            guessesLeft={this.state.guessesLeft}\n            username={this.props.username}\n            score={this.state.score}\n          >\n            <Guesses guesses={this.state.guesses} />\n          </ResultPage>\n        )\n      default:\n        return (\n          <Settings>\n            <Stack vertical align='center'>\n              <Stack align='center'>\n                <SettingsIcon color='action' />\n                <Text size='medium' color='secondary'>Game</Text>\n                <SettingsIcon color='action' />\n              </Stack>\n              <Button\n                id='confirmexit'\n                onClick={(e) => this.props.onExitGame(e)}\n              >\n                I give up!\n              </Button>\n              {this.state.showHint ? null : <Button onClick={this.buyHint.bind(this)}>Buy Hint</Button>}\n              <div style={{margin: '10px 20px'}}>\n                <TextDisplay text='Username' value={this.props.username} />\n                <TextDisplay text='Guesses Left' value={this.state.guessesLeft} />\n                <TextDisplay text='Level' value={this.props.level} />\n                <TextDisplay text='Viable Range' value={`0 - ${this.props.max}`} />\n                <TextDisplay text='Your Score' value={this.state.score} />\n                {this.state.showHint && this.state.score > 10 ? <TextDisplay text='Hint' value={`${this.state.secretCode.slice(0, 1)}_ _ _`} /> : null }\n                {/* <TextDisplay text='Secret Code' value={this.props.secretCode} /> */}\n                <Input\n                  text='Current Guess'\n                  id='currentGuess'\n                  placeholder='please enter four digit number'\n                  onChangeHandler={this.onChangeHandler.bind(this)}\n                  value={this.state.currentGuess}\n                />\n                <Text\n                  margin='10px 0'\n                  color='primary'\n                  size='medium'\n                >\n                  {this.state.notification}\n                </Text>\n              </div>\n              <Button\n                id='submitGuess'\n                onClick={this.onSubmitGuess.bind(this)}\n              >\n                Submit Guess\n              </Button>\n              <Guesses guesses={this.state.guesses} />\n            </Stack>\n          </Settings>\n      )\n    }\n  }\n}\n\nexport default Gameboard","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Rodal from 'rodal'\nimport 'rodal/lib/rodal.css'\nimport PageDiv from './Components/PageDiv'\nimport Button from './Components/Button'\nimport Text from './Components/Text'\nimport Stack from './Components/Stack'\nimport Rules from './Containers/Rules'\nimport Leaderboard from './Containers/Leaderboard'\nimport GameSettings from './Containers/GameSettings'\nimport Gameboard from './Containers/Gameboard'\n\nclass App extends Component {\n  state = {\n    showrules: false,\n    showleaderboard: false,\n    currentModal: '',\n    live: false,\n    username: '',\n    level: '',\n    secretCode: null,\n    max: 7\n  }\n\n  showModal(e) {\n    let modal = `show${e.target.id}`\n    this.setState({\n      [modal]: true,\n      currentModal: modal\n    })\n  }\n\n  hideModal() {\n    this.setState({\n      [this.state.currentModal]: false\n    })\n  }\n\n  createNewGame(gameSettings) {\n    let { username, level } = gameSettings\n    let max = level === 'normal' ? 7 : level === 'nightmare' ? 8 : 9\n    let url = `https://www.random.org/integers/?num=4&min=0&max=${max}&col=1&base=10&format=plain&rnd=new`\n    axios.get(url)\n      .then((response) => {\n        return response.data.split('\\n').slice(0, 4).join('')\n      })\n      .then(code => {\n        this.setState({\n          ...this.state,\n          secretCode: code,\n          username: username,\n          level: level,\n          live: true,\n          max: max\n        })\n      })\n      .catch(error => console.log(`error getting code: ${error}`))\n  }\n\n  exitGame() {\n    this.setState({\n      live: false\n    })\n  }\n\n  render () {\n    let metaData = !this.state.live ?\n    <GameSettings onCreateNewGame={this.createNewGame.bind(this)} /> :\n    <Gameboard\n      username={this.state.username}\n      level={this.state.level}\n      onExitGame={this.exitGame.bind(this)}\n      secretCode={this.state.secretCode}\n      max={this.state.max}\n    />\n\n    return (\n      <PageDiv>\n        <Text align='center' size='large'>Mastermind</Text>\n        <Stack justify='center'>\n          <Button id='rules' onClick={this.showModal.bind(this)}>How To Play</Button>\n          <Button id='leaderboard' onClick={this.showModal.bind(this)}>Leaderboard</Button>\n        </Stack>\n        {metaData}\n        <Rodal\n          height='300'\n          visible={this.state.showrules}\n          onClose={this.hideModal.bind(this)}\n        >\n          <Rules />\n        </Rodal>\n        <Rodal\n          visible={this.state.showleaderboard}\n          onClose={this.hideModal.bind(this)}\n        >\n          <Leaderboard />\n        </Rodal>\n        <Rodal\n          visible={this.state.showconfirmexit}\n          onClose={this.hideModal.bind(this)}\n        >\n          <Leaderboard />\n        </Rodal>\n      </PageDiv>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}